require 'tempfile'

require 'dinghy/plist'

class Dnsmasq
  include Plist
  RESOLVER_DIR = Pathname("/etc/resolver")
  RESOLVER_FILE = RESOLVER_DIR.join("docker")

  attr_reader :machine

  def initialize(machine)
    @machine = machine
  end

  def up
    unless resolver_configured?
      configure_resolver!
    end
    super
  end

  def plist_name
    "dinghy.dnsmasq.plist"
  end

  def name
    "DNS"
  end

  def status
    if `pgrep dnsmasq`.strip.to_i > 0
      "running"
    else
      "not running"
    end
  end

  def configure_resolver!
    puts "setting up DNS resolution, this will require sudo"
    unless RESOLVER_DIR.directory?
      system!("creating #{RESOLVER_DIR}", "sudo", "mkdir", "-p", RESOLVER_DIR)
    end
    Tempfile.open('dinghy-dnsmasq') do |f|
      f.write(resolver_contents)
      f.close
      system!("creating #{RESOLVER_FILE}", "sudo", "cp", f.path, RESOLVER_FILE)
      system!("creating #{RESOLVER_FILE}", "sudo", "chmod", "644", RESOLVER_FILE)
    end
    system!("restarting mDNSResponder", "sudo", "killall", "mDNSResponder")
  end

  def resolver_configured?
    RESOLVER_FILE.exist? && File.read(RESOLVER_FILE) == resolver_contents
  end

  def resolver_contents; <<-EOS.gsub(/^    /, '')
    # Generated by dinghy
    nameserver #{machine.host_ip}
    port 19322
    EOS
  end

  protected

  def plist_body
    <<-XML
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>KeepAlive</key>
  <true/>
  <key>Label</key>
  <string>dinghy.dnsmasq</string>
  <key>ProgramArguments</key>
  <array>
    <string>#{BREW}/sbin/dnsmasq</string>
    <string>--no-daemon</string>
    <string>--listen-address=#{machine.host_ip}</string>
    <string>--port=19322</string>
    <string>--bind-interfaces</string>
    <string>--no-resolv</string>
    <string>--address=/.docker/#{machine.vm_ip}</string>
    <string>--pid-file=#{BREW}/var/dinghy/dnsmasq.pid</string>
  </array>
  <key>RunAtLoad</key>
  <true/>
  <key>WorkingDirectory</key>
  <string>#{BREW}</string>
</dict>
</plist>
    XML
  end
end
